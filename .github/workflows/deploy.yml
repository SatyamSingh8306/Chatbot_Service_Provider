name: Deploy ImReadyAI Chatbot
on:
  workflow_dispatch:

env:
  GITHUB_USERNAME: imreadyai
  IMAGE_NAME: imreadyai-chatbot
  CLUSTER_USERNAME: ImReadyAI
  CLUSTER_REPOSITORY: infrastructure
  BRANCH: main
  USERNAME: ${{ github.actor }}
  ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FILE_PATH: kubernetes/overlays/production/kustomization.yaml
  KEY: newTag
  ENVIRONMENT: production

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: pytest test_endpoint.py

  update:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Generate GHCR Token
        id: ghcr_token
        shell: bash
        run: |
          GHCR_TOKEN=$(echo ${{ secrets.GITHUB_TOKEN }} | base64)
          echo "GHCR_TOKEN=$GHCR_TOKEN" >> $GITHUB_OUTPUT

      - name: Checkout Latest Image Tag
        id: checkout
        shell: bash
        run: |
          IMAGE_TAG=$(curl -H "Authorization: Bearer ${{ steps.ghcr_token.outputs.GHCR_TOKEN }}" https://ghcr.io/v2/${{ env.GITHUB_USERNAME }}/${{ env.IMAGE_NAME }}/tags/list | jq -r '.tags | map(select(test("^v[0-9]+$")))[-1]')
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Checkout Repository
        shell: bash
        run: |
          REPOSITORY=https://${{ env.USERNAME }}:${{ env.ACCESS_TOKEN }}@github.com/${{ env.CLUSTER_USERNAME }}/${{ env.CLUSTER_REPOSITORY }}.git
          git clone $REPOSITORY --depth 1 --branch ${{ env.BRANCH }} --single-branch .

      - name: Update Kustomization File
        shell: bash
        run: |
          sed -i "s/${{ env.KEY }}: .*/${{ env.KEY }}: ${{ steps.checkout.outputs.IMAGE_TAG }}/g" ${{ env.FILE_PATH }}

      - name: Commit Changes
        shell: bash
        run: |
          git config user.name "${{ env.USERNAME }}"
          git config user.email "${{ env.USERNAME }}@users.noreply.github.com"
          git add ${{ env.FILE_PATH }}
          git commit -m "Update ${{ env.IMAGE_NAME }} image tag to ${{ steps.checkout.outputs.IMAGE_TAG }} in ${{ env.ENVIRONMENT }}"
          git pull --rebase
          git push